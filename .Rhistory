filter(qseqid==i)
p=5
pidl <- ltg_params_df[p,"pid"]
pcovl <- ltg_params_df[p,"pcov"]
phitl <- ltg_params_df[p,"phit"]
taxnl <- ltg_params_df[p,"taxn"]
seqnl <- ltg_params_df[p,"seqn"]
refresl <- ltg_params_df[p,"refres"]
ltgresl <- ltg_params_df[p,"ltgres"]
pidl
df <- df %>%
filter(pident>=pidl)
pcovl
p=6
pidl <- ltg_params_df[p,"pid"]
pcovl <- ltg_params_df[p,"pcov"]
phitl <- ltg_params_df[p,"phit"]
taxnl <- ltg_params_df[p,"taxn"]
seqnl <- ltg_params_df[p,"seqn"]
refresl <- ltg_params_df[p,"refres"]
ltgresl <- ltg_params_df[p,"ltgres"]
df <- df %>%
filter(pident>=pidl) %>%
filter(qcovhsp>=pcovl)
df$staxids <- check_taxids(df$staxids)
df <- blast_res %>%
filter(qseqid==i)
p=6
pidl <- ltg_params_df[p,"pid"]
pcovl <- ltg_params_df[p,"pcov"]
phitl <- ltg_params_df[p,"phit"]
taxnl <- ltg_params_df[p,"taxn"]
seqnl <- ltg_params_df[p,"seqn"]
refresl <- ltg_params_df[p,"refres"]
ltgresl <- ltg_params_df[p,"ltgres"]
df <- df %>%
filter(pident>=pidl) %>%
filter(qcovhsp>=pcovl)
taxids <- unique(vec)
vec = df$staxids
for(tid in taxids){
if(tid %in% rownames(old_taxid)){
print("yes")
}else{
print("yes")
}
}
taxids <- unique(vec)
taxids
for(tid in taxids){
if(tid %in% rownames(old_taxid)){
print("yes")
}else{
print("yes")
}
}
for(tid in taxids){
if(tid %in% rownames(old_taxid)){
print(tid)
print("yes")
}else{
print("yes")
}
}
for(tid in taxids){
print(tid)
if(tid %in% rownames(old_taxid)){
print("yes")
}else{
print("yes")
}
}
View(old_taxid)
rownames(old_taxid)
for(tid in taxids){
print(tid)
if(tid %in% rownames(old_taxid)){
print("yes")
}else{
print("no")
}
}
vec
vec <- c(vec, 30)
vec
for(tid in vec){
print(tid)
if(tid %in% rownames(old_taxid)){
print("yes")
}else{
print("no")
}
}
for(i in 1:length(vec)){
print(vec[i])
if(tid %in% rownames(old_taxid))
print("yes")
}
check_taxids <- function(vec){
# for each taxid in the vector rplace taxid by new taxid, if it has been merged and thus not up to date
vec = df$staxids
vec <- c(vec, 30)
for(i in 1:length(vec)){
print(vec[i])
if(tid %in% rownames(old_taxid))
print("yes")
}
}
for(i in 1:length(vec)){
print(vec[i])
if(tid %in% rownames(old_taxid))
print("yes")
}
for(i in 1:length(vec)){
print(vec[i])
if(vec[i] %in% rownames(old_taxid))
print("yes")
}
for(i in 1:length(vec)){
print(vec[i])
if(vec[i] %in% rownames(old_taxid))
print("yes")
print(old_taxid[vec[i], tax_id])
}
for(i in 1:length(vec)){
print(vec[i])
if(vec[i] %in% rownames(old_taxid))
print("yes")
print(old_taxid[vec[i], "tax_id"])
}
# for each taxid in the vector rplace taxid by new taxid, if it has been merged and thus not up to date
vec = df$staxids
vec <- c(vec, 30)
for(i in 1:length(vec)){
print(vec[i])
if(vec[i] %in% rownames(old_taxid))
print("yes")
print(old_taxid[vec[i], "tax_id"])
}
# for each taxid in the vector rplace taxid by new taxid, if it has been merged and thus not up to date
vec = df$staxids
vec <- c(vec, 30)
for(i in 1:length(vec)){
print(vec[i])
if(vec[i] %in% rownames(old_taxid)){
print("yes")
print(old_taxid[vec[i], "tax_id"])
}
}
# for each taxid in the vector rplace taxid by new taxid, if it has been merged and thus not up to date
vec = df$staxids
vec <- c(vec, 30)
for(i in 1:length(vec)){
print(vec[i])
if(vec[i] %in% rownames(old_taxid)){
print("yes")
print(old_taxid["vec[i]", "tax_id"])
}
}
for(i in 1:length(vec)){
print(vec[i])
if(vec[i] %in% rownames(old_taxid)){
print("yes")
tmp <- vec[i]
print(old_taxid["tmp", "tax_id"])
}
}
print(old_taxid[tmp, "tax_id"])
for(i in 1:length(vec)){
print(vec[i])
if(vec[i] %in% rownames(old_taxid)){
print("yes")
tmp <- vec[i]
print(old_taxid["tmp", "tax_id"])
}
}
print(old_taxid["30", "tax_id"])
print(old_taxid[tmp, "tax_id"])
print(old_taxid[[tmp, "tax_id"]])
print(old_taxid[["tmp", "tax_id"]])
tmp <- vec[i]
for(i in 1:length(vec)){
print(vec[i])
tid <- vec[i]
if(tid %in% rownames(old_taxid)){
print("yes")
tmp <- tid
print(old_taxid[["tmp", "tax_id"]])
print(old_taxid["30", "tax_id"])
}
}
# for each taxid in the vector rplace taxid by new taxid, if it has been merged and thus not up to date
vec = df$staxids
vec <- c(vec, 30)
for(i in 1:length(vec)){
print(vec[i])
tid <- vec[i]
if(tid %in% rownames(old_taxid)){
print("yes")
print(old_taxid[["tid", "tax_id"]])
}
}
for(i in 1:length(vec)){
tid <- vec[i]
print(vec[i])
if(tid %in% rownames(old_taxid)){
print("yes")
print(old_taxid[["tid", "tax_id"]])
}
}
for(i in 1:length(vec)){
tid <- vec[i]
print(tid)
if(tid %in% rownames(old_taxid)){
print("yes")
print(old_taxid[["tid", "tax_id"]])
}
}
# for each taxid in the vector rplace taxid by new taxid, if it has been merged and thus not up to date
vec = df$staxids
vec <- c(vec, 30)
for(i in 1:length(vec)){
tid <- vec[i]
print(tid)
if(tid %in% rownames(old_taxid)){
print("yes")
print(old_taxid["tid", "tax_id"])
}
}
for(i in 1:length(vec)){
tid <- vec[i]
print(tid)
if(tid %in% rownames(old_taxid)){
print("yes")
print(old_taxid[as.character(tid), "tax_id"])
}
}
# for each taxid in the vector rplace taxid by new taxid, if it has been merged and thus not up to date
vec = df$staxids
vec <- c(vec, 30)
for(i in 1:length(vec)){
tid <- vec[i]
print(tid)
if(tid %in% rownames(old_taxid)){
print("yes")
print(old_taxid[as.character(tid), "tax_id"])
vec[i] <- old_taxid[as.character(tid), "tax_id"]
}
}
vec
df$staxids <- check_taxids(df$staxids)
check_taxids <- function(vec){
# for each taxid in the vector rplace taxid by new taxid, if it has been merged and thus not up to date
for(i in 1:length(vec)){
tid <- vec[i]
if(tid %in% rownames(old_taxid)){
vec[i] <- old_taxid[as.character(tid), "tax_id"]
}
}
return(vec)
}
df$staxids <- check_taxids(df$staxids)
check_taxids <- function(vec){
# for each taxid in the vector rplace taxid by new taxid, if it has been merged and thus not up to date
for(i in 1:length(vec)){
tid <- vec[i]
if(tid %in% rownames(old_taxid)){
vec[i] <- old_taxid[as.character(tid), "tax_id"]
}
}
return(vec)
}
df$staxids
i=1
df <- blast_res %>%
filter(qseqid==i)
p=6
pidl <- ltg_params_df[p,"pid"]
pcovl <- ltg_params_df[p,"pcov"]
phitl <- ltg_params_df[p,"phit"]
taxnl <- ltg_params_df[p,"taxn"]
seqnl <- ltg_params_df[p,"seqn"]
refresl <- ltg_params_df[p,"refres"]
ltgresl <- ltg_params_df[p,"ltgres"]
df <- df %>%
filter(pident>=pidl) %>%
filter(qcovhsp>=pcovl)
df$staxids <- check_taxids(df$staxids)
# read taxonomy file; quote="" is important, snce some of the taxon names have quites and this should be ignored
tax_df <- read.delim(taxonomy, header=T, sep="\t", fill=T, quote="")
# make data frame with old taxids as line numbers and taxids in a colums
old_taxid <- tax_df %>%
filter(!is.na(old_tax_id)) %>%
select(tax_id, old_tax_id)
# delete old_tax_ids from tax_df and make taxids unique
tax_df <- tax_df %>%
select(-old_tax_id)
tax_df <- unique(tax_df)
left_join(blast_res, old_taxid, by=c("staxids" = "old_taxid"))
left_join(blast_res, old_taxid, by=c("staxids" = "old_tax_id"))
blast_res <- left_join(blast_res, old_taxid, by=c("staxids" = "old_tax_id"))
blast_res[1,"tax_id"] <- 9999999999
blast_res$staxids[which(!is.na(blast_res$old_tax_id))] <- blast_res$old_tax_id
blast_res$staxids[which(!is.na(blast_res$tax_id)),] <- blast_res$tax_id
blast_res$staxids[which(!is.na(blast_res$tax_id))] <- blast_res$tax_id
blast_res <- read.delim(blast_out, header=F, sep="\t", fill=T, quote="")
colnames(blast_res) <- c("qseqid","sseqid","pident","length","qcovhsp","staxids","evalue")
blast_res <- left_join(blast_res, old_taxid, by=c("staxids" = "old_tax_id"))
l
blast_res[2,"tax_id"] <- 999999
blast_res$staxids[which(!is.na(blast_res$tax_id))] <- blast_res$tax_id
blast_res <- read.delim(blast_out, header=F, sep="\t", fill=T, quote="")
colnames(blast_res) <- c("qseqid","sseqid","pident","length","qcovhsp","staxids","evalue")
blast_res <- left_join(blast_res, old_taxid, by=c("staxids" = "old_tax_id"))
blast_res[2,"tax_id"] <- 999999
blast_res$staxids[which(!is.na(blast_res$tax_id))] <- blast_res$tax_id
blast_res$staxids[which(!is.na(blast_res$tax_id))] <- blast_res$tax_id[which(!is.na(blast_res$tax_id))]
blast_res <- read.delim(blast_out, header=F, sep="\t", fill=T, quote="")
colnames(blast_res) <- c("qseqid","sseqid","pident","length","qcovhsp","staxids","evalue")
blast_res <- left_join(blast_res, old_taxid, by=c("staxids" = "old_tax_id"))
blast_res[2,"tax_id"] <- 999999
blast_res[2,"tax_id"] <- 999999
blast_res[5,"tax_id"] <- 333333
blast_res$staxids[which(!is.na(blast_res$tax_id))] <- blast_res$tax_id[which(!is.na(blast_res$tax_id))]
blast_res <- blast_res %>%
select(-tax_id)
View(tax_df)
# add taxonomy info
blast_res <- left_join(blast_res, tax_df, by=c("staxids" = "tax_id"))
blast_res <- read.delim(blast_out, header=F, sep="\t", fill=T, quote="")
colnames(blast_res) <- c("qseqid","sseqid","pident","length","qcovhsp","staxids","evalue") %>%
select(qseqid, pident, qcovhsp, staxids)
blast_res <- blast_res %>%
select(qseqid, pident, qcovhsp, staxids)
blast_res <- read.delim(blast_out, header=F, sep="\t", fill=T, quote="")
colnames(blast_res) <- c("qseqid","sseqid","pident","length","qcovhsp","staxids","evalue")
blast_res <- blast_res %>%
select(qseqid, pident, qcovhsp, staxids)
# replace old taxids (if any) by up to date ones
blast_res <- left_join(blast_res, old_taxid, by=c("staxids" = "old_tax_id"))
blast_res$staxids[which(!is.na(blast_res$tax_id))] <- blast_res$tax_id[which(!is.na(blast_res$tax_id))]
blast_res <- blast_res %>%
select(-tax_id)
# add taxonomy info
blast_res <- left_join(blast_res, tax_df, by=c("staxids" = "tax_id"))
i=1
df <- blast_res %>%
filter(qseqid==i)
p=6
pidl <- ltg_params_df[p,"pid"]
pcovl <- ltg_params_df[p,"pcov"]
phitl <- ltg_params_df[p,"phit"]
taxnl <- ltg_params_df[p,"taxn"]
seqnl <- ltg_params_df[p,"seqn"]
refresl <- ltg_params_df[p,"refres"]
ltgresl <- ltg_params_df[p,"ltgres"]
ltg_params_df = data.frame( pid=c(100,97,95,90,85,80),
pcov=c(70,70,70,70,70,70),
phit=c(70,70,70,70,70,70),
taxn=c(1,1,2,3,4,4),
seqn=c(1,1,2,3,4,4),
refres=c(8,8,8,7,6,6),
ltgres=c(8,8,8,8,7,7)
)
p=6
pidl <- ltg_params_df[p,"pid"]
pcovl <- ltg_params_df[p,"pcov"]
phitl <- ltg_params_df[p,"phit"]
taxnl <- ltg_params_df[p,"taxn"]
seqnl <- ltg_params_df[p,"seqn"]
refresl <- ltg_params_df[p,"refres"]
ltgresl <- ltg_params_df[p,"ltgres"]
df <- df %>%
filter(pident>=pidl) %>%
filter(qcovhsp>=pcovl) %>%
filter(taxlevet>=refresl)
df <- df %>%
filter(pident>=pidl) %>%
filter(qcovhsp>=pcovl) %>%
filter(taxlevel>=refresl)
tn <- length(unique(df$staxids))
tn
nrow(df)
# replace old taxids (if any) by up to date ones
blast_res <- left_join(blast_res, old_taxid, by=c("staxids" = "old_tax_id"))
blast_res$staxids[which(!is.na(blast_res$tax_id))] <- blast_res$tax_id[which(!is.na(blast_res$tax_id))]
blast_res <- blast_res %>%
select(-tax_id)
# add taxonomy info
blast_res <- left_join(blast_res, tax_df, by=c("staxids" = "tax_id"))
for(i in 1:length(seqs)){
df <- blast_res %>%
filter(qseqid==i)
for(p in 1:length(ltg_params_df$pid)){ # for each pid
pidl <- ltg_params_df[p,"pid"]
pcovl <- ltg_params_df[p,"pcov"]
phitl <- ltg_params_df[p,"phit"]
taxnl <- ltg_params_df[p,"taxn"]
seqnl <- ltg_params_df[p,"seqn"]
refresl <- ltg_params_df[p,"refres"]
ltgresl <- ltg_params_df[p,"ltgres"]
# filter the blast hots according to  pid, pcov, refres
df <- df %>%
filter(pident>=pidl) %>%
filter(qcovhsp>=pcovl) %>%
filter(taxlevel>=refresl)
tn <- length(unique(df$staxids))
if(tn >= taxnl && nrow(df) ){
print(pidl, i)
#        make_ltg()
break
}
}
}
# read taxonomy file; quote="" is important, snce some of the taxon names have quites and this should be ignored
tax_df <- read.delim(taxonomy, header=T, sep="\t", fill=T, quote="")
# make data frame with old taxids as line numbers and taxids in a colums
old_taxid <- tax_df %>%
filter(!is.na(old_tax_id)) %>%
select(tax_id, old_tax_id)
# delete old_tax_ids from tax_df and make taxids unique
tax_df <- tax_df %>%
select(-old_tax_id)
tax_df <- unique(tax_df)
blast_res <- read.delim(blast_out, header=F, sep="\t", fill=T, quote="")
colnames(blast_res) <- c("qseqid","sseqid","pident","length","qcovhsp","staxids","evalue")
blast_res <- blast_res %>%
select(qseqid, pident, qcovhsp, staxids)
# replace old taxids (if any) by up to date ones
blast_res <- left_join(blast_res, old_taxid, by=c("staxids" = "old_tax_id"))
blast_res$staxids[which(!is.na(blast_res$tax_id))] <- blast_res$tax_id[which(!is.na(blast_res$tax_id))]
blast_res <- blast_res %>%
select(-tax_id)
# add taxonomy info
blast_res <- left_join(blast_res, tax_df, by=c("staxids" = "tax_id"))
View(blast_res)
for(i in 1:length(seqs)){
df <- blast_res %>%
filter(qseqid==i)
for(p in 1:length(ltg_params_df$pid)){ # for each pid
pidl <- ltg_params_df[p,"pid"]
pcovl <- ltg_params_df[p,"pcov"]
phitl <- ltg_params_df[p,"phit"]
taxnl <- ltg_params_df[p,"taxn"]
seqnl <- ltg_params_df[p,"seqn"]
refresl <- ltg_params_df[p,"refres"]
ltgresl <- ltg_params_df[p,"ltgres"]
# filter the blast hots according to  pid, pcov, refres
df <- df %>%
filter(pident>=pidl) %>%
filter(qcovhsp>=pcovl) %>%
filter(taxlevel>=refresl)
tn <- length(unique(df$staxids))
if(tn >= taxnl && nrow(df) ){
print(pidl, i)
#        make_ltg()
break
}
}
}
for(i in 1:length(seqs)){
df <- blast_res %>%
filter(qseqid==i)
for(p in 1:length(ltg_params_df$pid)){ # for each pid
pidl <- ltg_params_df[p,"pid"]
pcovl <- ltg_params_df[p,"pcov"]
phitl <- ltg_params_df[p,"phit"]
taxnl <- ltg_params_df[p,"taxn"]
seqnl <- ltg_params_df[p,"seqn"]
refresl <- ltg_params_df[p,"refres"]
ltgresl <- ltg_params_df[p,"ltgres"]
# filter the blast hots according to  pid, pcov, refres
df <- df %>%
filter(pident>=pidl) %>%
filter(qcovhsp>=pcovl) %>%
filter(taxlevel>=refresl)
tn <- length(unique(df$staxids))
if(tn >= taxnl && nrow(df) ){
print(i)
print(pidl)
#        make_ltg()
break
}
}
}
View(blast_res)
for(i in 1:length(seqs)){
df <- blast_res %>%
filter(qseqid==i)
for(p in 1:nrow(ltg_params_df)){ # for each pid
pidl <- ltg_params_df[p,"pid"]
pcovl <- ltg_params_df[p,"pcov"]
phitl <- ltg_params_df[p,"phit"]
taxnl <- ltg_params_df[p,"taxn"]
seqnl <- ltg_params_df[p,"seqn"]
refresl <- ltg_params_df[p,"refres"]
ltgresl <- ltg_params_df[p,"ltgres"]
# filter the blast hots according to  pid, pcov, refres
df <- df %>%
filter(pident>=pidl) %>%
filter(qcovhsp>=pcovl) %>%
filter(taxlevel>=refresl)
tn <- length(unique(df$staxids))
if(tn >= taxnl && nrow(df) > seqnl ){
print(i)
print(pidl)
#        make_ltg()
break
}
}
}
seqs
