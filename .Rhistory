higher_resolution_rdp_vs_blast_full == 0 & match_level_rdp_vs_blast_full <7 ~ "mismatch at higher resolution",
))
write.csv(df3, file="/home/meglecz/DB/UNITE_ITS/rdp/data_bqt/clean_galaxy/temp.tsv")
epi_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_16S1_2024-06-29-15-27-13_RDPclassifier_homogenized_taxa.tsv", sep="\t", header=TRUE)
View(epi_16S)
colnames(epi_16S)
colnames(epi_16S, max.print=1500)
rm(epi_16S)
coi_tax <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/EPI_IIICBR_2024-06-29-15-32-26_LTG_homogenized.tsv", sep="\t", header=TRUE)
colnames(coi_tax)
coi_count <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_IIICBR_2024-06-29-15-32-26_LTG.tsv", sep="\t", header=TRUE)
colnames(coi_count)
coi_count <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_IIICBR_2024-06-29-15-32-26.tsv", sep="\t", header=TRUE)
colnames(coi_count)
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE)
colnames(samples)
samples$sample <- paste(samples$run, samples$sample.final.Emese.Cecile, sep='.')
samples$sample
colnames(samples)
sample_coi_control <- samples %>%
select(sample_type == "mock" | sample_type == "negative")
library("devtools")
library("roxygen2")
library("seqinr")
library("dplyr")
library("tidyr")
library("ggplot2")
sample_coi_control <- samples %>%
select(sample_type == "mock" | sample_type == "negative")
sample_coi_control <- samples %>%
select(sample_type == "mock" | sample_type == "negative")
colnames(samples)
coi_tax <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/EPI_IIICBR_2024-06-29-15-32-26_LTG_homogenized.tsv", sep="\t", header=TRUE)
colnames(coi_tax)
coi_count <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_IIICBR_2024-06-29-15-32-26.tsv", sep="\t", header=TRUE)
colnames(coi_count)
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE)
colnames(samples)
samples$sample <- paste(samples$run, samples$sample.final.Emese.Cecile, sep='.')
samples$sample
sample_coi_control <- samples %>%
select(sample_type == "mock" | sample_type == "negative")
colnames(samples)
sample_coi_control <- samples %>%
select(sample_type == "mock" | sample_type == "negative")
samples$sample_type
sample_coi_control <- samples %>%
select(sample_type == "mock" || sample_type == "negatif")
sample_coi_control <- samples %>%
select(sample_type == "mock" | sample_type == "negatif")
samples$sample
samples$sample_type
sample_coi_control <- samples %>%
filter(sample_type == "mock" | sample_type == "negatif")
sample_coi_control
coi_count_control <- coi_count %>%
select(sample_coi_control$sample)
rm(coi_count)
rm(coi_tax)
rm(sample_coi_control)
rm(samples)
tax <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17_RDP_homogenized_taxa.tsv", sep="\t", header=TRUE)
colnames(coi_tax)
asvtble <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17.tsv", sep="\t", header=TRUE)
colnames(tax)
asvtble <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17.tsv", sep="\t", header=TRUE)
colnames(asvtble)
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE)
colnames(samples)
samples$sample <- paste(samples$run, samples$sample.final.Emese.Cecile, sep='.')
sample_coi_control <- samples %>%
filter(sample_type == "mock" | sample_type == "negatif") %>%
filter(maker=="IIICBR")
View(samples)
sample_coi_control <- samples %>%
filter(sample_type == "mock" | sample_type == "negatif") %>%
filter(marker=="IIICBR")
sample_16S_control <- samples %>%
filter(sample_type == "mock" | sample_type == "negatif") %>%
filter(marker=="16S1")
View(sample_16S_control)
View(sample_coi_control)
tax_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17_RDP_homogenized_taxa.tsv", sep="\t", header=TRUE)
colnames(tax_16S)
asvtble_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17.tsv", sep="\t", header=TRUE)
colnames(asvtble_16S)
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE)
colnames(samples)
samples$sample <- paste(samples$run, samples$sample.final.Emese.Cecile, sep='.')
sample_16S_control <- samples %>%
filter(sample_type == "mock" | sample_type == "negatif") %>%
filter(marker=="16S1")
View(sample_16S_control)
readcount_control_16S <- asvtble_16S %>%
select(sample_16S_control$sample)
View(sample_16S_control)
sample_16S_control <- samples %>%
filter(sample_type == "mock" | sample_type == "negatif") %>%
filter(marker=="16S1") %>%
filter(run != "Bqt1")
readcount_control_16S <- asvtble_16S %>%
select(sample_16S_control$sample) %>%
sample_coi_control <- samples %>%
filter(sample_type == "mock" | sample_type == "negatif") %>%
filter(marker=="IIICBR")
readcount_control_16S <- asvtble_16S %>%
select(sample_16S_control$sample) %>%
sample_coi_control <- samples %>%
filter(sample_type == "mock" | sample_type == "negatif") %>%
filter(marker=="IIICBR")
readcount_control_16S <- asvtble_16S %>%
select(sample_16S_control$sample)
colnames(asvtble_16S)
readcount_control_16S <- asvtble_16S %>%
select(sample_16S_control$sample)
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE)
colnames(samples)
samples$sample <- paste(samples$run, samples$sample.final.Emese.Cecile, sep='.')
sample_16S_control <- samples %>%
filter(sample_type == "mock" | sample_type == "negatif") %>%
filter(marker=="16S1") %>%
filter(run != "Bqt1")
readcount_control_16S <- asvtble_16S %>%
select(sample_16S_control$sample)
View(readcount_control_16S)
View(asvtble_16S)
tax_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17_RDP_homogenized_taxa.tsv", sep="\t", header=TRUE)
colnames(tax_16S)
asvtable_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17.tsv", sep="\t", header=TRUE)
colnames(asvtable_16S)
tmp <- asvtable_16S %>%
select(-marker, -sequnece_length, -read_count, -sample_count, -runs )
print(colnames(tmp))
tmp <- asvtable_16S %>%
select(-marker, -sequnece_length, -read_count, -sample_count, -runs )
tax_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17_RDP_homogenized_taxa.tsv", sep="\t", header=TRUE)
colnames(tax_16S)
asvtable_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17.tsv", sep="\t", header=TRUE)
colnames(asvtable_16S)
tmp <- asvtable_16S %>%
select(-marker, -sequnece_length, -read_count, -sample_count, -runs )
tmp <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs )
print(colnames(tmp))
length(colnames(tmp))
colnames(tmp)[1000-1324]
colnames(tmp)[1324]
colnames(tmp)[1323]
colnames(tmp)[1322]
tmp <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs, -sequence, -clustersize, -clusterid_3 )
length(colnames(tmp))
colnames(tmp)[1321]
colnames(tmp)
asvlong_16S <- tmp %>%
pivot_longer(names_to = "sample", values_to = "read_count",)
asvlong_16S <- tmp %>%
pivot_longer(cols != "variant", names_to = "sample", values_to = "read_count",)
asvlong_16S <- tmp %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count",)
View(asvlong_16S)
asvlong_16S <- tmp %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0)
asvlong_16S <- tmp %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0) %>%
separate(sample, into =c("run","sample_short"), sep="\\.")
asvlong_16S <- tmp %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0)
asvtbl16S[EPI15.s08_21_Che_2406_5.1]
asvtabl16S[EPI15.s08_21_Che_2406_5.1]
asvtable16S[EPI15.s08_21_Che_2406_5.1]
asvtable_16S[EPI15.s08_21_Che_2406_5.1]
asvtable_16S[EPI15.s08_21_Che_2406_5_1]
asvtable_16S[EPI15.s08_21_Che_2406_5]
asvtable_16S[EPI15.s08_21_Che_2406_5 1]
asvtable_16S["EPI15.s08_21_Che_2406_5 1"]
getwd()
colnames(asvtable_16S) > temp.txt
write.csv(colnames(asvtable_16S), file="tmp.txt")
tax_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17_RDP_homogenized_taxa.tsv", sep="\t", header=TRUE, check.names = FALSE)
colnames(tax_16S)
asvtable_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17.tsv", sep="\t", header=TRUE, check.names = FALSE)
colnames(asvtable_16S)
# keep only samples and variant
tmp <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs, -sequence, -clustersize, -clusterid_3 )
length(colnames(tmp))
asvlong_16S <- tmp %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0) %>%
separate(sample, into =c("run","sample_short"), sep="\\-")
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE)
colnames(samples)
View(asvtable_16S)
samples$sample <- paste(samples$run, samples$sample.final.Emese.Cecile, sep='-')
sample_16S_control <- samples %>%
filter(sample_type == "mock" | sample_type == "negatif") %>%
filter(marker=="16S1") %>%
filter(run != "Bqt1")
tax_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17_RDP_homogenized_taxa.tsv", sep="\t", header=TRUE, check.names = FALSE)
colnames(tax_16S)
asvtable_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17.tsv", sep="\t", header=TRUE, check.names = FALSE)
colnames(asvtable_16S)
# keep only samples and variant
tmp <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs, -sequence, -clustersize, -clusterid_3 )
length(colnames(tmp))
asvlong_16S <- tmp %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0) %>%
separate(sample, into =c("run","sample_short"), sep="\\-")
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE, check.names = FALSE)
View(samples)
# keep only samples and variant
tmp <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs, -sequence, -clustersize, -clusterid_3 )
length(colnames(tmp))
asvlong_16S <- tmp %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0) %>%
separate(sample, into =c("run","sample_short"), sep="\\-")
t <- colnames(samples)
t[2]  <- "sample"
t
colnames(samples) <- t
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE, check.names = FALSE)
colnames(samples)
samples <- samples %>%
rename("sample" = "sample final Emese Cecile")
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE, check.names = FALSE)
samples <- samples %>%
rename("sample" = "sample final Emese Cecile")
# keep only samples and variant
tmp <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs, -sequence, -clustersize, -clusterid_3 )
length(colnames(tmp))
asvlong_16S <- tmp %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0) %>%
separate(sample, into =c("run","sample_short"), sep="\\-")
View(asvlong_16S)
asvlong_16S <- left_join(asvlong_16S, samples, by=c("sample_short"="sample"))
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE, check.names = FALSE)
samples <- samples %>%
rename("sample" = "sample final Emese Cecile") %>%
filter(marker="16S1")
samples <- samples %>%
rename("sample" = "sample final Emese Cecile") %>%
filter(marker=="16S1")
# keep only samples and variant
tmp <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs, -sequence, -clustersize, -clusterid_3 )
length(colnames(tmp))
asvlong_16S <- tmp %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0) %>%
separate(sample, into =c("run","sample_short"), sep="\\-")
asvlong_16S <- left_join(asvlong_16S, samples, by=c("sample_short"="sample"))
tax_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17_RDP_homogenized_taxa.tsv", sep="\t", header=TRUE, check.names = FALSE)
colnames(tax_16S)
asvtable_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17.tsv", sep="\t", header=TRUE, check.names = FALSE)
colnames(asvtable_16S)
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE, check.names = FALSE)
samples <- samples %>%
rename("sample" = "sample final Emese Cecile") %>%
filter(marker=="16S1")
# keep only samples and variant
tmp <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs, -sequence, -clustersize, -clusterid_3 )
asvlong_16S <- tmp %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0) %>%
separate(sample, into =c("run","sample_short"), sep="\\-")
asvlong_16S <- left_join(asvlong_16S, samples, by=c("sample_short"="sample", "run"="run"))
asvtable_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17.tsv", sep="\t", header=TRUE, check.names = FALSE)
colnames(asvtable_16S)
# keep only samples and variant
asvlong_16S <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs, -sequence, -clustersize, -clusterid_3 ) %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0) %>%
separate(sample, into =c("run","sample_short"), sep="\\-")
asvlong_16S <- left_join(asvlong_16S, samples, by=c("sample_short"="sample", "run"="run")) %>%
select(-SampleID)
tax_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17_RDP_homogenized_taxa.tsv", sep="\t", header=TRUE, check.names = FALSE)
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE, check.names = FALSE)
samples_16S <- samples %>%
rename("sample" = "sample final Emese Cecile") %>%
filter(marker=="16S1")
sample_16S_control <- samples %>%
filter(sample_type == "mock" | sample_type == "negatif")
View(sample_16S_control)
sample_16S_control <- samples_16S %>%
filter(sample_type == "mock" | sample_type == "negatif")
asvlong_16S_contol <- asvlong_16S %>%
filter(sample %in% sample_16S_control$sample)
# get taxonomy
tax_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17_RDP_homogenized_taxa.tsv", sep="\t", header=TRUE, check.names = FALSE)
# get 16S samles
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE, check.names = FALSE)
samples_16S <- samples %>%
rename("sample" = "sample final Emese Cecile") %>%
filter(marker=="16S1")
# read asvtable
asvtable_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17.tsv", sep="\t", header=TRUE, check.names = FALSE)
# transform asvtable to long format
asvlong_16S <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs, -sequence, -clustersize, -clusterid_3 ) %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0) %>%
separate(sample, into =c("run","sample_short"), sep="\\-")
# add sample type info to asvlong_16S
asvlong_16S <- left_join(asvlong_16S, samples, by=c("sample_short"="sample", "run"="run")) %>%
select(-SampleID)
sample_16S_control <- samples_16S %>%
filter(sample_type == "mock" | sample_type == "negatif")
# get taxonomy
tax_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17_RDP_homogenized_taxa.tsv", sep="\t", header=TRUE, check.names = FALSE)
# get 16S samles
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE, check.names = FALSE)
samples_16S <- samples %>%
rename("sample" = "sample final Emese Cecile") %>%
filter(marker=="16S1")
# read asvtable
asvtable_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17.tsv", sep="\t", header=TRUE, check.names = FALSE)
# transform asvtable to long format
asvlong_16S <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs, -sequence, -clustersize, -clusterid_3 ) %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0) %>%
separate(sample, into =c("run","sample_short"), sep="\\-")
# add sample type info to asvlong_16S
asvlong_16S <- left_join(asvlong_16S, samples, by=c("sample_short"="sample", "run"="run")) %>%
select(-SampleID)
# transform asvtable to long format
asvlong_16S <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs, -sequence, -clustersize, -clusterid_3 ) %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0) %>%
separate(sample, into =c("run","sample_short"), sep="\\-")
View(asvlong_16S)
# add sample type info to asvlong_16S
asvlong_16S <- left_join(asvlong_16S, asvtable_16S, by=c("sample_short"="sample", "run"="run")) %>%
select(-SampleID)
# get taxonomy
tax_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/taxassign/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17_RDP_homogenized_taxa.tsv", sep="\t", header=TRUE, check.names = FALSE)
# get 16S samles
samples <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_unser_input/sample_types_Epi.tsv", sep="\t", header=TRUE, check.names = FALSE)
samples_16S <- samples %>%
rename("sample" = "sample final Emese Cecile") %>%
filter(marker=="16S1")
View(samples)
View(samples_16S)
# read asvtable
asvtable_16S <- read.table("/home/meglecz/vtam_EPI_Nextseq_2024_06/2024_06_25_doc_and_sum/asv_tables/pooled/pooled_asvtable_EPI_16S1_2024-07-01-14-19-17.tsv", sep="\t", header=TRUE, check.names = FALSE)
# transform asvtable to long format
asvlong_16S <- asvtable_16S %>%
select(-marker, -sequence_length, -read_count, -sample_count, -runs, -sequence, -clustersize, -clusterid_3 ) %>%
pivot_longer(cols = !starts_with("variant"), names_to = "sample", values_to = "read_count") %>%
filter(read_count>0) %>%
separate(sample, into =c("run","sample_short"), sep="\\-")
View(asvlong_16S)
# add sample type info to asvlong_16S
asvlong_16S <- left_join(asvlong_16S, samples_16S, by=c("sample_short"="sample", "run"="run")) %>%
select(-SampleID)
sample_16S_control <- samples_16S %>%
filter(sample_type == "mock" | sample_type == "negatif")
View(sample_16S_control)
asvlong_16S_contol <- asvlong_16S %>%
filter(sample %in% sample_16S_control$sample)
asvlong_16S_contol <- asvlong_16S %>%
filter(sample_type == "mock" | sample_type == "negatif")
View(asvlong_16S_contol)
asvlong_16S_contol <- asvlong_16S %>%
filter(sample_type == "negatif")
sum_variant_run <- asvlong_16S %>%
group_by(variant, run) %>%
summarise("read_count_var_run"=sum(read_count))
View(sum_variant_run)
View(asvlong_16S_contol)
asvlong_16S_contol <- left_join(asvlong_16S_contol, sum_variant_run, by=c("variant","run"))
asvlong_16S_contol$sample_to_all <- asvlong_16S_contol$read_count/asvlong_16S_contol$sum_variant_run
asvlong_16S_contol$sample_to_all <- asvlong_16S_contol$read_count/asvlong_16S_contol$read_count_var_run
sum_variant_run_sample_type <- asvlong_16S %>%
group_by(variant, run, sample_type) %>%
summarise("read_count_var_run_st"=sum(read_count))
View(sum_variant_run_sample_type)
#######
asvlong_16S_contol <- asvlong_16S %>%
filter(sample_type == "negatif")
sum_variant_run_sample_type <- asvlong_16S %>%
group_by(variant, run, sample_type) %>%
summarise("read_count_var_run_st"=sum(read_count))
asvlong_16S_contol <- left_join(asvlong_16S_contol, sum_variant_run_sample_type, by=c("variant","run", "sample_type"))
asvlong_16S_contol$sample_type_to_all <- asvlong_16S_contol$read_count/asvlong_16S_contol$read_count_var_run_st
library(dada2)
packageVersion("dada2")
path <-  "/home/meglecz/vtam_data/dada2/1_input_vtam-0.1.12/MFZR_orientation_pooled"
list.files(path)
# Forward and reverse fastq filenames have format: SAMPLENAME_R1_001.fastq and SAMPLENAME_R2_001.fastq
fnFs <- sort(list.files(path, pattern="_fw.fastq", full.names = TRUE))
fnRs <- sort(list.files(path, pattern="_rv.fastq", full.names = TRUE))
# Extract sample names, assuming filenames have format: SAMPLENAME_XXX.fastq
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
plotQualityProfile(fnFs[1:2])
plotQualityProfile(fnFs[3:8])
# Place filtered files in filtered/ subdirectory
filtFs <- file.path(path, "filtered", paste0(sample.names, "_F_filt.fastq.gz"))
filtRs <- file.path(path, "filtered", paste0(sample.names, "_R_filt.fastq.gz"))
names(filtFs) <- sample.names
names(filtRs) <- sample.names
# quality filter
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(160,160),
maxN=0, maxEE=c(2,2), truncQ=2, rm.phix=TRUE,
compress=TRUE, multithread=TRUE) # On Windows set multithread=FALSE
library(dplyr)
orig <- read.table("/home/meglecz/vtam_git/16S/16S_asvtable_TAS1-2_read_counts.tsv", sep="\t", header=TRUE)
orig <- read.table("/home/meglecz/vtam_git/16S/16S_asvtable_TAS1-2_read_counts.tsv", sep="\t", header=TRUE, na.strings = "")
orig <- read.table("/home/meglecz/vtam_git/16S/16S_asvtable_TAS1-2_read_counts.tsv", sep="\t", header=TRUE, na.strings = "", fill=TRUE)
View(orig)
caunt <- read.table("/home/meglecz/vtam_git/16S/SuppMat_16S_WO_tax.csv", sep="\t", header=TRUE, na.strings = "", fill=TRUE)
count <- read.table("/home/meglecz/vtam_git/16S/SuppMat_16S_WO_tax.csv", sep="\t", header=TRUE, na.strings = "", fill=TRUE)
colnames(orig)
orig <- orig %>%
select(1, 152:163)
colnames(orig) <- c("domain", "domain_bootstrap", "phylum", "phylum_bootstrap", "class", "class_bootstrap", "order", "order_bootstrap", "family", "family_bootstrap", "genus", "genus_bootstrap")
colnames(orig) <- c("variant_id", "domain", "domain_bootstrap", "phylum", "phylum_bootstrap", "class", "class_bootstrap", "order", "order_bootstrap", "family", "family_bootstrap", "genus", "genus_bootstrap")
colnames(count)
count <- left_join(count, orig, by="variant_id")
colnames(count)
write.csv2(file="/home/meglecz/vtam_git/16S/SuppMat_VTAM16S_corrected.tsv", count)
write.table(count, file="/home/meglecz/vtam_git/16S/SuppMat_VTAM16S_corrected.tsv", count=FALSE, sep=";", dec=".", row.names=FALSE)
write.table(count, file="/home/meglecz/vtam_git/16S/SuppMat_VTAM16S_corrected.tsv", quote=FALSE, sep=";", dec=".", row.names=FALSE)
bold <- read.table(tsv, sep="\t", header=TRUE, fill=TRUE)
tsv <- "/home/meglecz/mkCOInr/BOLD_2025_02/BOLD_Public.21-Feb-2025.tsv"
bold <- read.table(tsv, sep="\t", header=TRUE, fill=TRUE)
bold <- read.table(tsv, sep="\t", header=TRUE, fill=TRUE)
if(!requireNamespace("pak", quietly = TRUE)) install.packages("pak")
pak::pak("meglecz/vtamR")
pak::pak("meglecz/vtamR@develop")
library("vtamR")
knitr::opts_chunk$set(echo = TRUE, eval=TRUE, chache=TRUE )
# Bombyx
cutadapt_path <- "~/miniconda3/envs/vtam/bin/cutadapt" # v3.4
vsearch_path <- "~/miniconda3/envs/vtam/bin/vsearch" # v2.15.1
blast_path <- "~/miniconda3/envs/vtam/bin/blastn" # v2.10.1+
swarm_path <- "swarm" # v2.1.12
num_threads <- 8
sep <- ","
## Bombyx
taxonomy <- "~/mkCOInr/COInr/COInr_for_vtam_2025_05_23_dbV5/COInr_for_vtam_taxonomy.tsv"
blast_db <- "~/mkCOInr/COInr/COInr_for_vtam_2025_05_23_dbV5/COInr_for_vtam"
vtam_dir <- "C:/Users/emese/vtamR"
vtam_dir <- "~/vtamR"
setwd(vtam_dir)
getwd()
setwd("~/vtamR")
setwd("~/vtamR")
fastq_dir <- "vtamR_test/data"
outdir <- "vtamR_test/out_mfzr"
fastqinfo <- "vtamR_test/data/fastqinfo_mfzr.csv"
mock_composition <- "vtamR_test/data/mock_composition_mfzr.csv"
asv_list <- "vtamR_test/data/asv_list.csv"
## Bombyx
taxonomy <- "~/mkCOInr/COInr/COInr_for_vtam_2025_05_23_dbV5/COInr_for_vtam_taxonomy.tsv"
blast_db <- "~/mkCOInr/COInr/COInr_for_vtam_2025_05_23_dbV5/COInr_for_vtam"
CheckFileinfo(file=fastqinfo, dir=fastq_dir, file_type="fastqinfo")
CheckFileinfo(file=mock_composition, file_type="mock_composition")
CheckFileinfo(file=asv_list, file_type="asv_list")
# merge and quality filter
merged_dir <- file.path(outdir, "merged")
fastainfo_df <- Merge(fastqinfo, fastq_dir=fastq_dir, vsearch_path=vsearch_path, outdir=merged_dir)
# demultiplex, trim tags and pimers
sorted_dir <- file.path(outdir, "sorted")
sortedinfo_df <- SortReads(fastainfo_df, fasta_dir=merged_dir, outdir=sorted_dir, check_reverse=TRUE, cutadapt_path=cutadapt_path, vsearch_path=vsearch_path)
## Dereplicate
outfile <- file.path(outdir, "1_before_filter.csv")
updated_asv_list <- file.path(outdir, "ASV_list_with_IDs.csv")
read_count_df <- Dereplicate(sortedinfo_df, dir=sorted_dir, outfile=outfile, asv_list=asv_list, updated_asv_list=updated_asv_list)
## stat
stat_df <- data.frame(parameters=character(),
asv_count=integer(),
read_count=integer(),
sample_count=integer(),
sample_replicate_count=integer())
stat_df <- GetStat(read_count_df, stat_df, stage="Input", params=NA)
## Denoising
by_sample <- TRUE
outfile <- file.path(outdir, "2_Swarm_by_sample.csv")
read_count_df <- Swarm(read_count_df, outfile=outfile, swarm_path=swarm_path, num_threads=num_threads, by_sample=by_sample)
stat_df <- GetStat(read_count_df, stat_df, stage="Swarm", params=by_sample)
## LFNglobalReadCount
global_read_count_cutoff = 2
outfile <- file.path(outdir, "3_LFNglobalReadCount.csv")
read_count_df <- LFNglobalReadCount(read_count_df, cutoff=global_read_count_cutoff, outfile=outfile)
stat_df <- GetStat(read_count_df, stat_df, stage="LFNglobalReadCount", params=global_read_count_cutoff)
knitr::opts_chunk$set(echo = TRUE, eval=FALSE)
Test_MergeSortReads(vsearch_path=vsearch_path, cutadapt_path=cutadapt_path)
Test_Filters(vsearch_path=vsearch_path, swarm_path=swarm_path)
Test_MakeKnownOccurrences()
Test_Optimize(vsearch_path=vsearch_path)
Test_TaxAssign(blast_path=blast_path, num_threads=num_threads)
sortedinfo <- system.file("extdata/sortedinfo.csv", package = "vtamR")
sortedinfo
sortedinfo <- system.file("extdata/sortedinfo.csv", package = "vtamR")
CheckFileinfo(file=sortedinfo, dir=fastq_dir, file_type="sortedinfo")
knitr::opts_chunk$set(echo = TRUE, eval=TRUE, chache=TRUE )
system.dir("extdata/demo/fastq", package = "vtamR")
system.file("extdata/demo/fastq", package = "vtamR")
