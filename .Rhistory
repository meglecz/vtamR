vtam_dir <- "~/vtamR"
setwd(vtam_dir)
knitr::opts_chunk$set(echo = TRUE, eval=FALSE)
cutadapt_path <- "/home/meglecz/miniconda3/envs/vtam/bin"
vsearch_path <- "/home/meglecz/miniconda3/envs/vtam/bin"
blast_path <- "/home/meglecz/miniconda3/envs/vtam/bin"
swarm_path <- ""
#vtam_dir <- "~/vtamR"
#setwd(vtam_dir)
num_threads <- 8
sep <- ","
library("devtools")
library("roxygen2")
library("seqinr")
library("dplyr")
library("tidyr")
library("ggplot2")
load_all(".")
roxygenise()
knitr::opts_chunk$set(echo = TRUE, eval=FALSE)
load_all(".")
roxygenise()
usethis::use_roxygen_md()
taxonomy <- "/home/meglecz/mkCOInr/COInr/COInr_for_vtam_2025_05_11_dbV5/COInr_for_vtam_taxonomy.tsv"
blast_db <- "/home/meglecz/mkCOInr/COInr/COInr_for_vtam_2025_05_11_dbV5/COInr_for_vtam"
outdir <- "TAS_2025/out_COI_pooled/"
outdir <- check_dir(outdir)
files <- data.frame(file=c("TAS_2025/out_COI_TAS1/12_PoolReplicates.csv", "TAS_2025/out_COI_TAS2/12_PoolReplicates.csv"),
marker=c("COI", "COI"))
outfile <- paste(outdir, "1_Pooled_datasets_TAS_COI.csv", sep="")
read_count_pool <- PoolDatasets(files, outfile=outfile)
vtam_dir <- "~/vtamR"
setwd(vtam_dir)
```{r set_path, eval=TRUE}
cutadapt_path <- "/home/meglecz/miniconda3/envs/vtam/bin"
vsearch_path <- "/home/meglecz/miniconda3/envs/vtam/bin"
blast_path <- "/home/meglecz/miniconda3/envs/vtam/bin"
swarm_path <- ""
#vtam_dir <- "~/vtamR"
#setwd(vtam_dir)
num_threads <- 8
sep <- ","
taxonomy <- "/home/meglecz/mkCOInr/COInr/COInr_for_vtam_2025_05_11_dbV5/COInr_for_vtam_taxonomy.tsv"
blast_db <- "/home/meglecz/mkCOInr/COInr/COInr_for_vtam_2025_05_11_dbV5/COInr_for_vtam"
outdir <- "TAS_2025/out_COI_pooled/"
outdir <- check_dir(outdir)
files <- data.frame(file=c("TAS_2025/out_COI_TAS1/12_PoolReplicates.csv", "TAS_2025/out_COI_TAS2/12_PoolReplicates.csv"),
marker=c("COI", "COI"))
outfile <- paste(outdir, "1_Pooled_datasets_TAS_COI.csv", sep="")
read_count_pool <- PoolDatasets(files, outfile=outfile)
read_count_pool <- PoolDatasets(files, outfile=outfile)
outfile <- paste(outdir, "2_Clustered_ASV_TAS_COI.csv", sep="")
clustered_df <- Cluster_size(read_count_pool, id=0.97, vsearch_path=vsearch_path, outfile=outfile)
ltg_params_df = data.frame( pid=c(100,97,95,90,85),
pcov=c(80,80,80,80,80),
phit=c(90,90,90,90,90),
taxn=c(1,1,3,3,3),
seqn=c(1,1,3,3,3),
refres=c(1,1,1,1,1),
ltgres=c(8,8,8,8,8)
)
# Set parameter values
outfile <- paste(outdir, "3_TaxAssign_TAS_COI.csv", sep="")
# Run function
asv_tax_VTAM <- TaxAssign(asv=clustered_df, taxonomy=taxonomy, blast_db=blast_db, blast_path=blast_path, outfile=outfile, num_threads=num_threads, ltg_params=ltg_params_df, fill_lineage=TRUE)
# write ASV table completed by taxonomic assignments
outfile=paste(outdir, "4_asvtable_with_TaxAssign_TAS_COI.csv", sep="")
sortedinfo1 <- read.csv("TAS_2025/out_COI_TAS1/sorted/sortedinfo.csv")
sortedinfo2 <- read.csv("TAS_2025/out_COI_TAS2/sorted/sortedinfo.csv")
sortedinfo <- rbind(sortedinfo1, sortedinfo2)
mock_composition1 <- read.csv("TAS_2025/user_input/mock_composition_TAS1_COI.csv")
mock_composition2 <- read.csv("TAS_2025/user_input/mock_composition_TAS2_COI.csv")
mock_composition <- rbind(mock_composition1, mock_composition2)
asv_table_df <- WriteASVtable(clustered_df, outfile=outfile, asv_tax=asv_tax_VTAM, sortedinfo=sortedinfo, add_empty_samples=T, add_sums_by_sample=T, add_sums_by_asv=T, add_expected_asv=T, mock_composition=mock_composition)
# Set parameter values
missing_occurrences <- paste(outdir, "missing_occurrences.csv", sep= "")
performance_metrics <- paste(outdir, "performance_metrics_pooled_COI.csv", sep= "")
known_occurrences <- paste(outdir, "known_occurrences.csv", sep= "")
# Run function
results <- MakeKnownOccurrences(clustered_df, sortedinfo=sortedinfo, mock_composition=mock_composition, known_occurrences=known_occurrences, missing_occurrences=missing_occurrences, performance_metrics=performance_metrics)
# give explicit names to the 3 output data frames
known_occurrences_df <- results[[1]]
missing_occurrences_df <- results[[2]]
performance_metrics_df <- results[[3]]
View(performance_metrics_df)
