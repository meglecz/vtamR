knit_with_parameters("C:/Users/emese/vtamR/tutorial/Tutorial_vtamR.Rmd")
knitr::opts_chunk$set(echo = TRUE)
install.packages("devtools")
install.packages("roxygen2")
install.packages("seqinr")
install.packages("tidyr")
library("devtools")
library("roxygen2")
library("seqinr") # splitseq for FilterCodonStop
library("dplyr")
library("tidyr") # gather for read_asv_table; pivot_wider in write_asvtable and stat_sample !!sym
library("ggplot2")
computer <- "Windows" # Bombyx/Endoume/Windows
if(computer == "Bombyx"){
vtam_dir <- "~/vtamR"
cutadapt_path="/home/meglecz/miniconda3/envs/vtam_2/bin/"
vsearch_path = ""
blast_path="~/ncbi-blast-2.11.0+/bin/" # bombyx
swarm_path <- ""
db_path="~/mkLTG/COInr_for_vtam_2022_05_06_dbV5/"
#     fastq_dir <- "vtamR_test/data/"
#     fastqinfo <- "vtamR_test/data/fastqinfo_zfzr.csv"
#    outdir <- "vtamR_test/out_zfzr/"
#     mock_composition <- "vtamR_test/data/mock_composition_zfzr.csv"
#      asv_list <- "vtamR_test/data/asv_list_zfzr.csv"
fastq_dir <- "/home/meglecz/vtamR_large_files/fastq/"
fastqinfo <- "/home/meglecz/vtamR_large_files/user_input/fastqinfo_mfzr.csv"
outdir <- "/home/meglecz/vtamR_large_files/out/"
mock_composition <- "/home/meglecz/vtamR_large_files/user_input/mock_composition_mfzr.csv"
asv_list <- "/home/meglecz/vtamR_large_files/user_input/asv_list.csv"
num_threads=8
compress = T
} else if (computer == "Endoume"){
vtam_dir <- "~/vtamR"
cutadapt_path="/home/emese/miniconda3/bin/"
vsearch_path = "/home/emese/miniconda3/bin/"
blast_path= "" # deactivate conda
swarm_path <- ""
db_path= "~/mkCOInr/COInr/COInr_for_vtam_2023_05_03_dbV5/"
#    fastq_dir <- "vtamR_test/data/"
#     fastqinfo <- "vtamR_test/data/fastqinfo_mfzr.csv"
#     outdir <- "vtamR_test/out_mfzr/"
#     mock_composition <- "vtamR_test/data/mock_composition_mfzr.csv"
#     asv_list <- "vtamR_test/data/asv_list_zfzr.csv"
fastq_dir <- "~/vtamR_large_data"
fastqinfo <- "~/vtamR_large_data/metadata/fastqinfo_Sea18_IIICBR_vtamR.csv"
outdir <- "/home/emese/vtamR_large_data/out/"
mock_composition <- "~/vtamR_large_data/metadata/mock_composition_Sea18_IIICBR_vtamR.csv"
asv_list <- "~/vtamR_large_data/metadata/asv_list.csv"
num_threads=8
compress = T
}else if (computer == "Windows"){
vtam_dir <- "C:/Users/emese/vtamR/"
cutadapt_path="C:/Users/Public/"
vsearch_path = "C:/Users/Public/vsearch-2.23.0-win-x86_64/bin/"
blast_path="C:/Users/Public/blast-2.14.1+/bin/"
swarm_path <- "C:/swarm-3.1.4-win-x86_64/bin/"
db_path="C:/Users/Public/COInr_for_vtam_2023_05_03_dbV5/"
#  fastq_dir <- "C:/Users/emese/vtamR_private/fastq/"
fastq_dir <- "vtamR_test/data/"
fastqinfo <- "vtamR_test/data/fastqinfo_mfzr.csv"
outdir <- "vtamR_test/out_mfzr/"
mock_composition <- "vtamR_test/data/mock_composition_mfzr.csv"
asv_list <- "vtamR_test/data/asv_list_zfzr.csv"
num_threads=4
compress = F
}
sep=","
setwd(vtam_dir)
taxonomy=paste(db_path, "COInr_for_vtam_taxonomy.tsv", sep="")
blast_db=paste(db_path, "COInr_for_vtam", sep="")
ltg_params_df = data.frame( pid=c(100,97,95,90,85,80),
pcov=c(70,70,70,70,70,70),
phit=c(70,70,70,70,70,70),
taxn=c(1,1,2,3,4,4),
seqn=c(1,1,2,3,4,4),
refres=c("species","species","species","genus","family","family"),
ltgres=c("species","species","species","species", "genus","genus")
)
ltg_params_df = data.frame( pid=c(100,97,95,90,85,80),
pcov=c(70,70,70,70,70,70),
phit=c(70,70,70,70,70,70),
taxn=c(1,1,2,3,4,4),
seqn=c(1,1,2,3,4,4),
refres=c(8,8,8,7,6,6),
ltgres=c(8,8,8,8,7,7)
)
A <- c("a", "a", "b", "b")
B <- c(5, 10, 15, 20)
dataframe <- data.frame(A, B)
print(dataframe)
print(dataframe)
A <- c("a", "a", "b", "b")
B <- c(5, 10, 15, 20)
dataframe <- data.frame(A, B)
A <- c("a", "a", "b", "b")
B <- c(5, 10, 15, 20)
dataframe <- data.frame(A, B)
print(dataframe)
library("devtools")
library("roxygen2")
library("seqinr") # splitseq for FilterCodonStop
library("dplyr")
library("tidyr") # gather for read_asv_table; pivot_wider in write_asvtable and stat_sample !!sym
library("ggplot2")
library("devtools")
library("roxygen2")
library("seqinr") # splitseq for FilterCodonStop
library("dplyr")
library("tidyr") # gather for read_asv_table; pivot_wider in write_asvtable and stat_sample !!sym
library("ggplot2")
---
title: "Tutorial_vtamR"
knitr::opts_chunk$set(echo = TRUE)
#install.packages("devtools")
#install.packages("roxygen2")
#install.packages("seqinr")
#install.packages("tidyr")
library("devtools")
library("roxygen2")
library("seqinr") # splitseq for FilterCodonStop
library("dplyr")
library("tidyr") # gather for read_asv_table; pivot_wider in write_asvtable and stat_sample !!sym
library("ggplot2")
computer <- "Windows" # Bombyx/Endoume/Windows
if(computer == "Bombyx"){
vtam_dir <- "~/vtamR"
cutadapt_path="/home/meglecz/miniconda3/envs/vtam_2/bin/"
vsearch_path = ""
blast_path="~/ncbi-blast-2.11.0+/bin/" # bombyx
swarm_path <- ""
db_path="~/mkLTG/COInr_for_vtam_2022_05_06_dbV5/"
#     fastq_dir <- "vtamR_test/data/"
#     fastqinfo <- "vtamR_test/data/fastqinfo_zfzr.csv"
#    outdir <- "vtamR_test/out_zfzr/"
#     mock_composition <- "vtamR_test/data/mock_composition_zfzr.csv"
#      asv_list <- "vtamR_test/data/asv_list_zfzr.csv"
fastq_dir <- "/home/meglecz/vtamR_large_files/fastq/"
fastqinfo <- "/home/meglecz/vtamR_large_files/user_input/fastqinfo_mfzr.csv"
outdir <- "/home/meglecz/vtamR_large_files/out/"
mock_composition <- "/home/meglecz/vtamR_large_files/user_input/mock_composition_mfzr.csv"
asv_list <- "/home/meglecz/vtamR_large_files/user_input/asv_list.csv"
num_threads=8
compress = T
} else if (computer == "Endoume"){
vtam_dir <- "~/vtamR"
cutadapt_path="/home/emese/miniconda3/bin/"
vsearch_path = "/home/emese/miniconda3/bin/"
blast_path= "" # deactivate conda
swarm_path <- ""
db_path= "~/mkCOInr/COInr/COInr_for_vtam_2023_05_03_dbV5/"
#    fastq_dir <- "vtamR_test/data/"
#     fastqinfo <- "vtamR_test/data/fastqinfo_mfzr.csv"
#     outdir <- "vtamR_test/out_mfzr/"
#     mock_composition <- "vtamR_test/data/mock_composition_mfzr.csv"
#     asv_list <- "vtamR_test/data/asv_list_zfzr.csv"
fastq_dir <- "~/vtamR_large_data"
fastqinfo <- "~/vtamR_large_data/metadata/fastqinfo_Sea18_IIICBR_vtamR.csv"
outdir <- "/home/emese/vtamR_large_data/out/"
mock_composition <- "~/vtamR_large_data/metadata/mock_composition_Sea18_IIICBR_vtamR.csv"
asv_list <- "~/vtamR_large_data/metadata/asv_list.csv"
num_threads=8
compress = T
}else if (computer == "Windows"){
vtam_dir <- "C:/Users/emese/vtamR/"
cutadapt_path="C:/Users/Public/"
vsearch_path = "C:/Users/Public/vsearch-2.23.0-win-x86_64/bin/"
blast_path="C:/Users/Public/blast-2.14.1+/bin/"
swarm_path <- "C:/swarm-3.1.4-win-x86_64/bin/"
db_path="C:/Users/Public/COInr_for_vtam_2023_05_03_dbV5/"
#  fastq_dir <- "C:/Users/emese/vtamR_private/fastq/"
fastq_dir <- "vtamR_test/data/"
fastqinfo <- "vtamR_test/data/fastqinfo_mfzr.csv"
outdir <- "vtamR_test/out_mfzr/"
mock_composition <- "vtamR_test/data/mock_composition_mfzr.csv"
asv_list <- "vtamR_test/data/asv_list_zfzr.csv"
num_threads=4
compress = F
}
sep=","
setwd(vtam_dir)
taxonomy=paste(db_path, "COInr_for_vtam_taxonomy.tsv", sep="")
blast_db=paste(db_path, "COInr_for_vtam", sep="")
ltg_params_df = data.frame( pid=c(100,97,95,90,85,80),
pcov=c(70,70,70,70,70,70),
phit=c(70,70,70,70,70,70),
taxn=c(1,1,2,3,4,4),
seqn=c(1,1,2,3,4,4),
refres=c("species","species","species","genus","family","family"),
ltgres=c("species","species","species","species", "genus","genus")
)
ltg_params_df = data.frame( pid=c(100,97,95,90,85,80),
pcov=c(70,70,70,70,70,70),
phit=c(70,70,70,70,70,70),
taxn=c(1,1,2,3,4,4),
seqn=c(1,1,2,3,4,4),
refres=c(8,8,8,7,6,6),
ltgres=c(8,8,8,8,7,7)
)
A <- c("a", "a", "b", "b")
B <- c(5, 10, 150, 200)
dataframe <- data.frame(A, B)
print(dataframe)
library(knitr)
kable(dataframe, digits = 2)
library(pander)
plant <- c("a", "b", "c")
temperature <- c(20, 20, 20)
growth <- c(0.65, 0.95, 0.15)
dataframe <- data.frame(plant, temperature, growth)
emphasize.italics.cols(3)   # Make the 3rd column italics
pander(dataframe)           # Create the table
plot(pressure)
load_all(".")
roxygenise() # Builds the help files
library("devtools")
library("roxygen2")
library("seqinr") # splitseq for FilterCodonStop
library("dplyr")
library("tidyr") # gather for read_asv_table; pivot_wider in write_asvtable and stat_sample !!sym
#library("utils") # to handle zipped files
library("ggplot2")
computer <- "Windows" # Bombyx/Endoume/Windows
if(computer == "Bombyx"){
vtam_dir <- "~/vtamR"
cutadapt_path="/home/meglecz/miniconda3/envs/vtam_2/bin/"
vsearch_path = ""
blast_path="~/ncbi-blast-2.11.0+/bin/" # bombyx
swarm_path <- ""
db_path="~/mkLTG/COInr_for_vtam_2022_05_06_dbV5/"
#     fastq_dir <- "vtamR_test/data/"
#     fastqinfo <- "vtamR_test/data/fastqinfo_zfzr.csv"
#    outdir <- "vtamR_test/out_zfzr/"
#     mock_composition <- "vtamR_test/data/mock_composition_zfzr.csv"
#      asv_list <- "vtamR_test/data/asv_list_zfzr.csv"
fastq_dir <- "/home/meglecz/vtamR_large_files/fastq/"
fastqinfo <- "/home/meglecz/vtamR_large_files/user_input/fastqinfo_mfzr.csv"
outdir <- "/home/meglecz/vtamR_large_files/out/"
mock_composition <- "/home/meglecz/vtamR_large_files/user_input/mock_composition_mfzr.csv"
asv_list <- "/home/meglecz/vtamR_large_files/user_input/asv_list.csv"
num_threads=8
compress = T
} else if (computer == "Endoume"){
vtam_dir <- "~/vtamR"
cutadapt_path="/home/emese/miniconda3/bin/"
vsearch_path = "/home/emese/miniconda3/bin/"
blast_path= "" # deactivate conda
swarm_path <- ""
db_path= "~/mkCOInr/COInr/COInr_for_vtam_2023_05_03_dbV5/"
#    fastq_dir <- "vtamR_test/data/"
#     fastqinfo <- "vtamR_test/data/fastqinfo_mfzr.csv"
#     outdir <- "vtamR_test/out_mfzr/"
#     mock_composition <- "vtamR_test/data/mock_composition_mfzr.csv"
#     asv_list <- "vtamR_test/data/asv_list_zfzr.csv"
fastq_dir <- "~/vtamR_large_data"
fastqinfo <- "~/vtamR_large_data/metadata/fastqinfo_Sea18_IIICBR_vtamR.csv"
outdir <- "/home/emese/vtamR_large_data/out/"
mock_composition <- "~/vtamR_large_data/metadata/mock_composition_Sea18_IIICBR_vtamR.csv"
asv_list <- "~/vtamR_large_data/metadata/asv_list.csv"
num_threads=8
compress = T
}else if (computer == "Windows"){
vtam_dir <- "C:/Users/emese/vtamR/"
cutadapt_path="C:/Users/Public/"
vsearch_path = "C:/Users/Public/vsearch-2.23.0-win-x86_64/bin/"
blast_path="C:/Users/Public/blast-2.14.1+/bin/"
swarm_path <- "C:/swarm-3.1.4-win-x86_64/bin/"
db_path="C:/Users/Public/COInr_for_vtam_2023_05_03_dbV5/"
#  fastq_dir <- "C:/Users/emese/vtamR_private/fastq/"
fastq_dir <- "vtamR_test/data/"
fastqinfo <- "vtamR_test/data/fastqinfo_mfzr.csv"
outdir <- "vtamR_test/out_mfzr/"
mock_composition <- "vtamR_test/data/mock_composition_mfzr.csv"
asv_list <- "vtamR_test/data/asv_list_zfzr.csv"
num_threads=4
compress = F
}
sep=","
setwd(vtam_dir)
taxonomy=paste(db_path, "COInr_for_vtam_taxonomy.tsv", sep="")
blast_db=paste(db_path, "COInr_for_vtam", sep="")
ltg_params_df = data.frame( pid=c(100,97,95,90,85,80),
pcov=c(70,70,70,70,70,70),
phit=c(70,70,70,70,70,70),
taxn=c(1,1,2,3,4,4),
seqn=c(1,1,2,3,4,4),
refres=c("species","species","species","genus","family","family"),
ltgres=c("species","species","species","species", "genus","genus")
)
ltg_params_df = data.frame( pid=c(100,97,95,90,85,80),
pcov=c(70,70,70,70,70,70),
phit=c(70,70,70,70,70,70),
taxn=c(1,1,2,3,4,4),
seqn=c(1,1,2,3,4,4),
refres=c(8,8,8,7,6,6),
ltgres=c(8,8,8,8,7,7)
)
#setwd("D:/vtamR")
# load local packages
load_all(".")
roxygenise() # Builds the help files
usethis::use_roxygen_md() # rebuild the help files
#setwd("D:/vtamR")
# load local packages
load_all(".")
roxygenise()
usethis::use_roxygen_md()
###
# Check coherence (often) user-made input files
###
# file_type [fastqinfo/fastainfo/sortedinfo/mock_composition/known_occurrences/read_count/read_count_sample/asv_list]
check_fileinfo(file=fastqinfo, dir=fastq_dir, file_type="fastqinfo", sep=sep)
check_fileinfo(file=mock_composition, file_type="mock_composition", sep=sep)
check_fileinfo(file=asv_list, file_type="asv_list", sep=sep)
# create the output directory and check the the slash at the end
outdir <- check_dir(dir=outdir)
fastq_dir <- check_dir(dir=fastq_dir)
# Measure runtime using system.time()
start_time <- Sys.time()  # Record the start time
# define stat data frame that will be completed with counts after each step
stat_df <- data.frame(parameters=character(),
asv_count=integer(),
read_count=integer(),
sample_count=integer(),
sample_replicate_count=integer())
#setwd("D:/vtamR")
# load local packages
load_all(".")
roxygenise()
usethis::use_roxygen_md()
?knitr::knit
knitr::opts_chunk$set(echo = TRUE, eval=FALSE)
check_fileinfo(file=fastqinfo, dir=fastq_dir, file_type="fastqinfo", sep=sep)
check_fileinfo(file=fastqinfo, dir=fastq_dir, file_type="fastqinfo", sep=sep)
library("devtools")
library("roxygen2")
library("seqinr") # splitseq for FilterCodonStop
library("dplyr")
library("tidyr") # gather for read_asv_table; pivot_wider in write_asvtable and stat_sample !!sym
library("ggplot2")
# path to third party programs
cutadapt_path="C:/Users/Public/"
vsearch_path = "C:/Users/Public/vsearch-2.23.0-win-x86_64/bin/"
blast_path="C:/Users/Public/blast-2.14.1+/bin/"
swarm_path <- "C:/swarm-3.1.4-win-x86_64/bin/"
num_threads=4
sep="," # separator use in csv files
compress = F
# input data
fastq_dir <- "vtamR_test/data/" # directory with input fastq files
fastqinfo <- "vtamR_test/data/fastqinfo_mfzr.csv"
outdir <- "vtamR_test/out_mfzr/"
mock_composition <- "vtamR_test/data/mock_composition_mfzr.csv"
asv_list <- "vtamR_test/data/asv_list_zfzr.csv"
# Taxassign related ojects
db_path="C:/Users/Public/COInr_for_vtam_2023_05_03_dbV5/"
taxonomy=paste(db_path, "COInr_for_vtam_taxonomy.tsv", sep="")
blast_db=paste(db_path, "COInr_for_vtam", sep="")
ltg_params_df = data.frame( pid=c(100,97,95,90,85,80),
pcov=c(70,70,70,70,70,70),
phit=c(70,70,70,70,70,70),
taxn=c(1,1,2,3,4,4),
seqn=c(1,1,2,3,4,4),
refres=c(8,8,8,7,6,6),
ltgres=c(8,8,8,8,7,7))
load_all(".")
roxygenise()
usethis::use_roxygen_md()
check_fileinfo(file=fastqinfo, dir=fastq_dir, file_type="fastqinfo", sep=sep)
check_fileinfo(file=mock_composition, file_type="mock_composition", sep=sep)
check_fileinfo(file=asv_list, file_type="asv_list", sep=sep)
test_merge_and_sortreads(vsearch_path=vsearch_path, cutadapt_path=cutadapt_path)
test_filters(vsearch_path=vsearch_path, sep=sep)
test_make_known_occurrences(sep=sep)
test_taxassign(sep=sep, blast_path=blast_path, blast_db=blast_db, taxonomy=taxonomy, num_threads=num_threads)
test_optimize(vsearch_path=vsearch_path)
library("devtools")
library("roxygen2")
library("seqinr") # splitseq for FilterCodonStop
library("dplyr")
library("tidyr") # gather for read_asv_table; pivot_wider in write_asvtable and stat_sample !!sym
library("ggplot2")
library("devtools")
library("roxygen2")
library("seqinr") # splitseq for FilterCodonStop
library("dplyr")
library("tidyr") # gather for read_asv_table; pivot_wider in write_asvtable and stat_sample !!sym
library("ggplot2")
library("devtools")
library("roxygen2")
library("seqinr") # splitseq for FilterCodonStop
library("dplyr")
library("tidyr") # gather for read_asv_table; pivot_wider in write_asvtable and stat_sample !!sym
library("ggplot2")
# path to third party programs
cutadapt_path="C:/Users/Public/"
vsearch_path = "C:/Users/Public/vsearch-2.23.0-win-x86_64/bin/"
blast_path="C:/Users/Public/blast-2.14.1+/bin/"
swarm_path <- "C:/swarm-3.1.4-win-x86_64/bin/"
num_threads=4
sep="," # separator use in csv files
compress = F
# input data
fastq_dir <- "vtamR_test/data/" # directory with input fastq files
fastqinfo <- "vtamR_test/data/fastqinfo_mfzr.csv"
outdir <- "vtamR_test/out_mfzr/"
mock_composition <- "vtamR_test/data/mock_composition_mfzr.csv"
asv_list <- "vtamR_test/data/asv_list_zfzr.csv"
# Taxassign related ojects
db_path="C:/Users/Public/COInr_for_vtam_2023_05_03_dbV5/"
taxonomy=paste(db_path, "COInr_for_vtam_taxonomy.tsv", sep="")
blast_db=paste(db_path, "COInr_for_vtam", sep="")
ltg_params_df = data.frame( pid=c(100,97,95,90,85,80),
pcov=c(70,70,70,70,70,70),
phit=c(70,70,70,70,70,70),
taxn=c(1,1,2,3,4,4),
seqn=c(1,1,2,3,4,4),
refres=c(8,8,8,7,6,6),
ltgres=c(8,8,8,8,7,7))
load_all(".")
roxygenise()
usethis::use_roxygen_md()
check_fileinfo(file=fastqinfo, dir=fastq_dir, file_type="fastqinfo", sep=sep)
check_fileinfo(file=mock_composition, file_type="mock_composition", sep=sep)
check_fileinfo(file=asv_list, file_type="asv_list", sep=sep)
