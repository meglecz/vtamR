library("devtools")
library("roxygen2")
library("seqinr")
library("dplyr")
library("tidyr")
library("ggplot2")
load_all(".")
roxygenise()
usethis::use_roxygen_md()
getd()
getwd()
vtam_dir <- "~/vtamR" # clone from https://github.com/meglecz/vtamR
setwd(vtam_dir)
getwd()
cutadapt_path <- "~/miniconda3/envs/vtam/bin/" # v3.4
vsearch_path <- "~/miniconda3/envs/vtam/bin/" # v2.15.1
blast_path <- "~/miniconda3/envs/vtam/bin/" # v2.10.1+
swarm_path <- "" # v2.1.12
num_threads <- 8
sep <- ","
taxonomy <- "~/mkCOInr/COInr/COInr_for_vtam_2025_05_23_dbV5/COInr_for_vtam_taxonomy.tsv"
blast_db <- "~/mkCOInr/COInr/COInr_for_vtam_2025_05_23_dbV5/COInr_for_vtam"
knitr::opts_chunk$set(echo = TRUE, eval=FALSE)
fastq_dir <- "vtamR_test/data"
outdir <- "vtamR_test/out_mfzr"
fastqinfo <- "vtamR_test/data/fastqinfo_mfzr.csv"
mock_composition <- "vtamR_test/data/mock_composition_mfzr.csv"
asv_list <- "vtamR_test/data/asv_list.csv"
CheckFileinfo(file=fastqinfo, dir=fastq_dir, file_type="fastqinfo")
CheckFileinfo(file=mock_composition, file_type="mock_composition")
CheckFileinfo(file=asv_list, file_type="asv_list")
# merge and quality filter
merged_dir <- file.path(outdir, "merged")
merged_dir
fastainfo_df <- Merge(fastqinfo, fastq_dir=fastq_dir, vsearch_path=vsearch_path, outdir=merged_dir)
CheckFileinfo(file=fastainfo_df, dir=merged_dir, file_type="fastainfo")
# demultiplex, trim tags and pimers
sorted_dir <- paste(outdir, "sorted/", sep="")
# demultiplex, trim tags and pimers
sorted_dir <- file.path(outdir, "sorted")
sortedinfo_df <- SortReads(fastainfo_df, fasta_dir=merged_dir, outdir=sorted_dir, check_reverse=TRUE, cutadapt_path=cutadapt_path, vsearch_path=vsearch_path)
tmp_dir <- tempdir()
print(tmp_dir)
tmp_dir <- tempdir()
print(tmp_dir)
file.create(file.path(tempdir(), "my_temp_file.txt"))
tmp_file <- tempfile(pattern = "data_", fileext = ".csv")
print(tmp_file)
