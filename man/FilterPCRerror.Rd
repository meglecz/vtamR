% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vtamR_fun.R
\name{FilterPCRerror}
\alias{FilterPCRerror}
\title{Filter PCR error}
\usage{
FilterPCRerror(
  read_count,
  outfile = "",
  vsearch_path = "vsearch",
  num_threads = 0,
  pcr_error_var_prop = 0.1,
  max_mismatch = 1,
  by_sample = T,
  sample_prop = 0.8,
  sep = ","
)
}
\arguments{
\item{read_count}{Data frame or csv file with the following variables:
asv_id, sample, replicate, read_count, asv.}

\item{outfile}{Character string: csv file name to print the output data
frame if necessary. If empty, no file is written.}

\item{vsearch_path}{Character string: path to vsearch executables.}

\item{num_threads}{Positive integer: Number of CPUs. If 0, use all available CPUs.}

\item{pcr_error_var_prop}{Real (0-1): if the proportion of read_counts of
two similar ASVs is less or equal to \code{pcr_error_var_prop},
the less abundant is flagged as a PCR error.}

\item{max_mismatch}{Positive integer: maximum number of mismatches
(gaps included) to consider two ASVs as similar}

\item{by_sample}{logical: if TRUE ASVs are flagged as an PCR error
separately for each sample.}

\item{sample_prop}{Real (0-1): if by_sample=TRUE, the ASV must be
flagged as a PCRerror in \code{sample_prop} of the samples to be eliminated.}

\item{sep}{Field separator character in input and output csv files.}
}
\value{
Filtered read_count_df data frame.
}
\description{
Filter out an ASVs if it is very similar (\code{max_mismatch}) to another
more frequent ASV (\code{pcr_error_var_prop}).
}
\details{
The whole data set can be analyzed at once (\code{by_sample=F})
or sample by sample.
}
\examples{
\dontrun{
filtered_read_count_df <- FilterPCRerror(read_count_df, 
     vsearch_path=vsearch_path, 
     pcr_error_var_prop=0.2, 
     max_mismatch=2, 
     by_sample=T, 
     sample_prop=0.8
     )
filtered_read_count_df <- FilterPCRerror(read_count_df, 
    vsearch_path=vsearch_path, 
    pcr_error_var_prop=0.2,
    max_mismatch=2, 
    by_sample=F
    )
}
}
