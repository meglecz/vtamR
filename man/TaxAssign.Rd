% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vtamR_fun.R
\name{TaxAssign}
\alias{TaxAssign}
\title{TaxAssign}
\usage{
TaxAssign(
  asv,
  taxonomy,
  blast_db,
  blast_path = "blastn",
  ltg_params = "",
  outfile = "",
  num_threads = 1,
  tax_sep = "\\t",
  sep = ",",
  quiet = T,
  fill_lineage = TRUE
)
}
\arguments{
\item{asv}{Data frame or csv file containing an asv column.}

\item{taxonomy}{TSV file containing the following columns:
tax_id,parent_tax_id,rank,name_txt,old_tax_id(has been merged to tax_id),
taxlevel (8: species, 7: genus, 6: family, 5: order, 4: class, 3: phylum,
2: kingdom, 1: superkingdom, 0: root).}

\item{blast_db}{Character string naming the BLAST database.}

\item{blast_path}{Character string: path to BLAST executable.}

\item{ltg_params}{Data frame or csv file with a list of
percentage of identity values (pid) and associated parameters
(pcov,phit,taxn,seqn,refres,ltgres).}

\item{outfile}{Character string: csv file name to print the output data
frame if necessary. If empty, no file is written.}

\item{num_threads}{Positive integer: number of CPUs.}

\item{tax_sep}{Field separator character used in taxonomy file.}

\item{sep}{Field separator character in input and output csv files.}

\item{quiet}{logical: If TRUE, suppress informational messages and only
show warnings or errors.}

\item{fill_lineage}{Boolean. If TRUE, fill in missing higher-level taxa
in the lineage using the name of the next known lower-level taxon, prefixed
by the current taxonomic level
(e.g., No_kingdom_Chrysophyceae if kingdom is missing but class is known).}
}
\value{
Data frame with the following columns:
asv_id,ltg_taxid,ltg_name,ltg_rank,ltg_rank_index,
superkingdom_taxid,superkingdom,kingdom_taxid,kingdom,
phylum_taxid,phylum,class_taxid,class,order_taxid,order,
family_taxid,family,genus_taxid,genus,species_taxid,species,
pid,pcov,phit,taxn,seqn,refres,ltgres,asv
}
\description{
Find Lowest Taxonomic Group (LTG) for each ASV in the input data frame.
}
\details{
TaxAssign uses the mkLTG algorithm described
in \href{https://rdcu.be/dxABF}{Megl√©cz, 2024} and
\url{https://github.com/meglecz/mkLTG}.
This is a BLAST based method using a series of identity percentage of cutoff
values to validate BLAST hits and each cutoff is associated with
further parameters:
\itemize{
\item pcov: Percentage of coverage
\item phit: Perentage of the validated hits to be included in LTG
\item taxn: Minimum number of taxa among the validated hits
\item seqn: Minimum number of sequences among the validated hits
\item refres: Minimum resolution of the hit to be validated
\item ltgres: Maximum resolution of the LTG.
}
}
\examples{
\dontrun{
TaxAssign(asv=read_count_df, taxonomy="xxxxxx", blast_db="xxxxxxxxx", num_threads=4)
}
}
